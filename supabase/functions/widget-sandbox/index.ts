
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import "https://deno.land/x/xhr@0.2.1/mod.ts";

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
};

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { code } = await req.json();
    
    if (!code) {
      return new Response(
        JSON.stringify({ error: "Widget code is required" }),
        { status: 400, headers: { ...corsHeaders, "Content-Type": "application/json" } }
      );
    }

    console.log("Creating sandbox for widget code");
    
    // Create a sandbox on CodeSandbox
    const response = await fetch("https://codesandbox.io/api/v1/sandboxes/define?json=1", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        files: {
          "package.json": {
            content: JSON.stringify({
              name: "helm-ai-widget",
              version: "1.0.0",
              description: "A widget generated by Helm AI",
              dependencies: {
                "react": "^18.2.0",
                "react-dom": "^18.2.0",
                "@radix-ui/react-slot": "^1.0.0",
                "class-variance-authority": "^0.7.0",
                "clsx": "^2.0.0",
                "tailwind-merge": "^2.0.0",
                "tailwindcss-animate": "^1.0.0",
                "lucide-react": "^0.292.0"
              },
              devDependencies: {
                "tailwindcss": "^3.3.0"
              }
            })
          },
          "index.js": {
            content: `
import React from 'react';
import ReactDOM from 'react-dom/client';
import Widget from './Widget';
import './styles.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <div className="p-4 max-w-4xl mx-auto">
      <Widget />
    </div>
  </React.StrictMode>
);`
          },
          "Widget.js": {
            content: code
          },
          "styles.css": {
            content: `
@import url('https://cdn.jsdelivr.net/npm/tailwindcss@3.3.0/dist/tailwind.min.css');

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

.glass-morphism {
  background: rgba(255, 255, 255, 0.07);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}

/* Shadcn UI component classes */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.375rem;
  font-weight: 500;
  transition-property: color, background-color, border-color;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  padding: 0.5rem 1rem;
}

.btn-primary {
  background-color: hsl(220.9 39.3% 11%);
  color: white;
}

.btn-primary:hover {
  background-color: hsl(220.9 39.3% 15%);
}

.input {
  display: flex;
  height: 2.5rem;
  width: 100%;
  border-radius: 0.375rem;
  border: 1px solid hsl(214.3 31.8% 91.4%);
  background-color: transparent;
  padding: 0.5rem 0.75rem;
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: 0.5rem;
  border: 1px solid hsl(214.3 31.8% 91.4%);
  background-color: white;
  color: hsl(222.2 47.4% 11.2%);
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.card-header {
  display: flex;
  flex-direction: column;
  padding: 1.5rem;
  gap: 0.5rem;
}

.card-title {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1;
  letter-spacing: -0.025em;
}

.card-description {
  color: hsl(215.4 16.3% 46.9%);
  font-size: 0.875rem;
}

.card-content {
  padding: 1.5rem;
  padding-top: 0;
}

.card-footer {
  display: flex;
  align-items: center;
  padding: 1.5rem;
  padding-top: 0;
}
`
          },
          "public/index.html": {
            content: `
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Helm AI Widget</title>
  </head>
  <body>
    <div id="root"></div>
  </body>
</html>
`
          }
        }
      })
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error("CodeSandbox API error:", errorText);
      throw new Error(`CodeSandbox API error: ${response.status} ${errorText}`);
    }

    const data = await response.json();
    console.log("CodeSandbox API response:", JSON.stringify(data));
    
    const sandboxId = data.sandbox_id;
    const previewUrl = `https://${sandboxId}.csb.app/`;

    return new Response(
      JSON.stringify({ sandboxId, previewUrl }),
      { headers: { ...corsHeaders, "Content-Type": "application/json" } }
    );
  } catch (error) {
    console.error("Error in widget-sandbox function:", error);
    
    return new Response(
      JSON.stringify({ error: error.message }),
      { status: 500, headers: { ...corsHeaders, "Content-Type": "application/json" } }
    );
  }
});
